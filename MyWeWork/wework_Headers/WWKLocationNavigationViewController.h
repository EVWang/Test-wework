//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "QMSSearchDelegate-Protocol.h"
#import "QMapViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "WWKForwardingControllerDelegate-Protocol.h"

@class NSString, QMapView, UIButton, UILabel, WWFavoritesItem, WWKMessage, WWKMessageLocation;
@protocol WWKLocationNavigationViewControllerDelegate;

@interface WWKLocationNavigationViewController : UIViewController <QMapViewDelegate, WWKForwardingControllerDelegate, QMSSearchDelegate, UIGestureRecognizerDelegate>
{
    QMapView *mapView_;
    WWKMessage *message_;
    WWKMessageLocation *location_;
    UIButton *backButton_;
    UIButton *moreButton_;
    UIButton *naviButton_;
    UIButton *findMyPostionButton_;
    UILabel *nameAddreeLabel_;
    UILabel *detailAddressLabel_;
    UIViewController *backViewController_;
    id interactivePopDelegate_;
    WWFavoritesItem *mFavItem;
    id <WWKLocationNavigationViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <WWKLocationNavigationViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)searchWithDrivingRouteSearchOption:(id)arg1 didRecevieResult:(id)arg2;
- (void)searchWithSearchOption:(id)arg1 didFailWithError:(id)arg2;
- (void)searchWithWalkingRouteSearchOption:(id)arg1 didRecevieResult:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (id)mapView:(id)arg1 viewForOverlay:(id)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)viewDidLayoutSubviews;
-     // Error parsing type: v36@0:8^{Message={AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::MessageObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::MessageObserver *, std::__1::allocator<model::MessageObserver *> >=^^{MessageObserver}^^{MessageObserver}{__compressed_pair<model::MessageObserver **, std::__1::allocator<model::MessageObserver *> >=^^{MessageObserver}}}ii}{unique_ptr<pb::Message, std::__1::default_delete<pb::Message> >={__compressed_pair<pb::Message *, std::__1::default_delete<pb::Message> >=^{Message}}}}16^{Conversation=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::ConversationObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::ConversationObserver *, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}^^{ConversationObserver}{__compressed_pair<model::ConversationObserver **, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}}}ii}{unique_ptr<pb::Conversation, std::__1::default_delete<pb::Conversation> >={__compressed_pair<pb::Conversation *, std::__1::default_delete<pb::Conversation> >=^{Conversation}}}{vector<scoped_refptr<model::ConversationMember>, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}^{scoped_refptr<model::ConversationMember>}{__compressed_pair<scoped_refptr<model::ConversationMember> *, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}}}BBBBBBB{unique_ptr<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >={__compressed_pair<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > *, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >=^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >}}}{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}}24B32, name: forwardingMessage:ToConversation:isSuccess:
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)p_onNavigationButtonClicked:(id)arg1;
- (void)p_zoomMapView:(struct CLLocationCoordinate2D)arg1 andAnother:(struct CLLocationCoordinate2D)arg2;
- (void)p_zoomMapView:(struct CLLocationCoordinate2D)arg1;
- (void)p_zoomMapViewFirstTime:(id)arg1;
- (double)p_getDistanceBetween:(struct CLLocationCoordinate2D)arg1 AndTarget:(struct CLLocationCoordinate2D)arg2;
- (void)p_onFindMyPostionClicked:(id)arg1;
- (void)p_onMoreButtonClicked:(id)arg1;
- (void)p_addAnnotation:(struct CLLocationCoordinate2D)arg1 andTitle:(id)arg2;
- (void)p_onBackButtonClicked:(id)arg1;
- (void)p_showRoute;
- (void)p_navigationByAppleMap;
- (void)p_streetView;
- (void)didReceiveMemoryWarning;
- (id)backViewController;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;
- (id)initWithFavItem:(id)arg1 message:(id)arg2;
- (id)initWithLocation:(id)arg1;
- (id)initWithMessage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

