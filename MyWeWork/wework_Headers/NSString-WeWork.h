//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSString.h>

@interface NSString (WeWork)
+ (id)ReadableTimeWithSecFromBeginningDay:(unsigned int)arg1;
+ (id)ShareToWeiXinHTMLStringFromForwardMessageWithSubject:(id)arg1 andMessages:(id)arg2 andForwardMessageVec:(const vector_f14f4326 *)arg3;
+     // Error parsing type: @40@0:8@16@24^{Conversation=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::ConversationObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::ConversationObserver *, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}^^{ConversationObserver}{__compressed_pair<model::ConversationObserver **, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}}}ii}{unique_ptr<pb::Conversation, std::__1::default_delete<pb::Conversation> >={__compressed_pair<pb::Conversation *, std::__1::default_delete<pb::Conversation> >=^{Conversation}}}{vector<scoped_refptr<model::ConversationMember>, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}^{scoped_refptr<model::ConversationMember>}{__compressed_pair<scoped_refptr<model::ConversationMember> *, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}}}BBBBBBB{unique_ptr<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >={__compressed_pair<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > *, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >=^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >}}}{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}}32, name: ShareToWeiXinHTMLStringFromMessageListWithSubject:andMessages:andConversation:
+ (id)unSupportMsgTipsWithType:(unsigned int)arg1;
+ (id)remainTimeTipsWithEndTime:(long long)arg1;
+     // Error parsing type: @24@0:8r^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}16, name: detailIntroduceWithUser:
+     // Error parsing type: @32@0:8r^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}16Q24, name: interfaceJobWithUser:underDepartmentID:
+     // Error parsing type: @24@0:8r^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}16, name: interfaceJobWithUser:
+     // Error parsing type: @32@0:8r^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}16Q24, name: associatedJobWithUser:underDepartmentID:
+     // Error parsing type: v32@0:8r^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}16@?24, name: fullPathWithModelUser:callback:
+     // Error parsing type: v32@0:8r^{Department=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::DepartmentObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::DepartmentObserver *, std::__1::allocator<model::DepartmentObserver *> >=^^{DepartmentObserver}^^{DepartmentObserver}{__compressed_pair<model::DepartmentObserver **, std::__1::allocator<model::DepartmentObserver *> >=^^{DepartmentObserver}}}ii}B{WeakPtr<model::Department>={WeakReference={scoped_refptr<const base::internal::WeakReference::Flag>=^{Flag}}}Q}{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}{vector<scoped_refptr<model::User>, std::__1::allocator<scoped_refptr<model::User> > >=^{scoped_refptr<model::User>}^{scoped_refptr<model::User>}{__compressed_pair<scoped_refptr<model::User> *, std::__1::allocator<scoped_refptr<model::User> > >=^{scoped_refptr<model::User>}}}{unique_ptr<pb::Department, std::__1::default_delete<pb::Department> >={__compressed_pair<pb::Department *, std::__1::default_delete<pb::Department> >=^{Department}}}BB}16@?24, name: fullPathWithModelDepartment:callback:
+ (id)mainJobWithPbUser:(const struct User *)arg1;
+     // Error parsing type: @24@0:8r^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}16, name: mainJobWithUser:
+ (id)buildNumber;
+ (id)fourPartVersionNumber;
+ (id)correctReportVersionNumber;
+ (id)correctRDMVersionNumber;
+ (id)mailAttachmentNameWithNameIndex:(long long)arg1 pathExtension:(id)arg2;
+ (id)parentDepartmentChainString:(const vector_a024b487 *)arg1;
- (id)imagePathForURL;
- (_Bool)isQQMail;
- (_Bool)isGmailMail;
- (id)truncateSubstringToIndex:(unsigned long long)arg1;
- (id)avatarUrlForWidthInPixel:(long long)arg1;
- (id)avatarPreviewUrl;
- (id)avatarOriginalUrl;
- (id)avatarThumbnailUrl;
- (id)avatarCanonicalUrl;
- (id)imageUrlForSize:(long long)arg1;
- (id)imageSmartThumbnailUrl;
- (id)imagePreviewUrl;
- (id)imageOriginalUrl;
- (id)imageGeneratedThumbnailUrl;
- (id)imageThumbnailUrl;
- (id)imageCanonicalUrl;
- (_Bool)isValidPhoneNumber;
- (struct _NSRange)validateEmailWithPrefix:(id)arg1 withSuffix:(id)arg2;
- (_Bool)isValidMailAddress;
- (_Bool)isValidIntetnationMobileNumber;
- (_Bool)isValidMobileNumber;
- (id)emailAddressByTrimmingWhiteSpace;
- (id)correctLittleUnReadNumber;
- (id)correctLargeUnReadNumber;
- (id)correctLocalPushAlertBody;
@end

