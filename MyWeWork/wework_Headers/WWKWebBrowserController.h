//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WWKWebViewController.h"

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKScriptMessageHandler-Protocol.h"
#import "WKUIDelegate-Protocol.h"
#import "WWKForwardingControllerDelegate-Protocol.h"
#import "WWKScrollActionSheetDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString, UIBarButtonItem, UIImageView, UIScreenEdgePanGestureRecognizer, UIView, WWFavoriteId, WWKConversationTitleView, WWKLoadFailedView, WWKLoadingView, WWKPullBackgroundView, WWKScrollActionSheet, WWKWebBrowserHistory, WWKWebErrorView, WWKWebViewProgressView;

@interface WWKWebBrowserController : WWKWebViewController <WWKScrollActionSheetDelegate, WWKForwardingControllerDelegate, UITableViewDataSource, UITableViewDelegate, WKUIDelegate, UIWebViewDelegate, UIGestureRecognizerDelegate, WKNavigationDelegate, WKScriptMessageHandler>
{
    NSString *_initUrl;
    WWKScrollActionSheet *_scrollActionSheet;
    NSString *_currentOpenUrl;
    NSString *_forwardMessageSayMore;
    _Bool _isLoadSuccess;
    _Bool _isBack;
    NSArray *_rightBarButtonItems;
    UIBarButtonItem *_rightBarButtonItem;
    double _translateX;
    long long _loadingCount;
    long long _uiBackCount;
    _Bool _isShowCloseButton;
    WWKWebViewProgressView *_progressView;
    UIImageView *_screenSnotImageView;
    UIView *_screenshotOverlayView;
    UIImageView *_screenshotShadowView;
    WWKWebBrowserHistory *_webViewHistory;
    WWKLoadFailedView *_loadFailedView;
    WWKLoadingView *_loadingView;
    WWKWebErrorView *_errorView;
    scoped_refptr_c1fa851d _model_message;
    NSMutableDictionary *_urlReplaceRule;
    _Bool _showAuthLoading;
    _Bool _disablesWeworkScheme;
    _Bool _backIsClose;
    _Bool _hideRightmenu;
    _Bool _showPullBackgroundTitle;
    _Bool _showEnterProfile;
    _Bool _showEnterConvMenuItem;
    _Bool _showSendMessageMenuItem;
    WWKPullBackgroundView *_pullBackgroundView;
    long long _fromChannel;
    WWFavoriteId *_favId;
    WWKConversationTitleView *_titleView;
    NSString *_forceTitle;
    NSString *_subtitle;
    NSArray *_leftBarButtonItems;
    unsigned long long _thisAppID;
    UIScreenEdgePanGestureRecognizer *_panGesture;
    NSString *_lastNavigationRecordURL;
    NSMutableArray *_arrayOfNavigationRecordURL;
}

+ (void)initialize;
@property(retain, nonatomic) NSMutableArray *arrayOfNavigationRecordURL; // @synthesize arrayOfNavigationRecordURL=_arrayOfNavigationRecordURL;
@property(retain, nonatomic) NSString *lastNavigationRecordURL; // @synthesize lastNavigationRecordURL=_lastNavigationRecordURL;
@property(retain, nonatomic) UIScreenEdgePanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(nonatomic) _Bool showSendMessageMenuItem; // @synthesize showSendMessageMenuItem=_showSendMessageMenuItem;
@property(nonatomic) _Bool showEnterConvMenuItem; // @synthesize showEnterConvMenuItem=_showEnterConvMenuItem;
@property(nonatomic) _Bool showEnterProfile; // @synthesize showEnterProfile=_showEnterProfile;
@property(nonatomic) unsigned long long thisAppID; // @synthesize thisAppID=_thisAppID;
@property(retain, nonatomic) NSArray *leftBarButtonItems; // @synthesize leftBarButtonItems=_leftBarButtonItems;
@property(nonatomic) _Bool showPullBackgroundTitle; // @synthesize showPullBackgroundTitle=_showPullBackgroundTitle;
@property(copy, nonatomic) NSString *currentOpenUrl; // @synthesize currentOpenUrl=_currentOpenUrl;
@property(nonatomic) _Bool hideRightmenu; // @synthesize hideRightmenu=_hideRightmenu;
@property(nonatomic) _Bool backIsClose; // @synthesize backIsClose=_backIsClose;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSString *forceTitle; // @synthesize forceTitle=_forceTitle;
@property(retain, nonatomic) WWKConversationTitleView *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) WWFavoriteId *favId; // @synthesize favId=_favId;
@property(nonatomic) long long fromChannel; // @synthesize fromChannel=_fromChannel;
@property(nonatomic) _Bool disablesWeworkScheme; // @synthesize disablesWeworkScheme=_disablesWeworkScheme;
@property(nonatomic) _Bool showAuthLoading; // @synthesize showAuthLoading=_showAuthLoading;
@property(retain, nonatomic) WWKPullBackgroundView *pullBackgroundView; // @synthesize pullBackgroundView=_pullBackgroundView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)willSendRequest:(id)arg1 redirectResponse:(id)arg2;
- (void)forceToOrientation:(long long)arg1;
- (void)forceToOrientation2:(long long)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)getBarButtonItemWithInterfaceOrientation;
- (void)onClickFailView;
- (id)errorView;
- (void)p_hideLoadFailedView;
- (void)p_showLoadFailedView:(id)arg1;
- (void)showLoadFailedView:(id)arg1 errorImage:(id)arg2 errorDetail:(id)arg3 enableAction:(_Bool)arg4;
- (void)p_hideLoadingView;
- (void)p_showLoadingView;
- (void)p_updatePageContentProviderWithUrl:(id)arg1;
- (void)p_updateCurrentOpenUrl;
- (void)p_removeSwipeGesture;
- (void)p_addSwipeGesture;
- (void)p_goBackWithIsNeedUpdateWebViewHistory:(_Bool)arg1;
- (void)goBack;
- (void)onReturn;
- (void)onClose;
- (void)updateNavigationBarRightItem;
- (void)setRightBarButtonItem:(id)arg1;
- (void)setRightBarButtonItems:(id)arg1;
- (id)errorURL;
- (id)initialURL;
- (void)clearBrowserHistory;
- (void)p_dismissViewController;
- (void)p_updateNavigationBarRightItem;
- (void)p_updateNavigationLeftBarItems;
- (_Bool)isPresent;
- (void)p_updateNavigationTitle;
- (void)p_updateSnapshotWithURL:(id)arg1;
- (void)p_checkHistoryWithRequest:(id)arg1;
- (void)p_handlePan:(id)arg1;
- (void)p_checkSwipeGesture;
- (void)p_finishLoadRequst;
- (void)p_startLoadRequst;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)webView:(id)arg1 enableGL:(_Bool)arg2;
- (void)applicationDidEnterBackground;
- (void)applicationWillEnterForeground;
- (id)webView:(id)arg1 a:(id)arg2 b:(id)arg3 c:(id)arg4 d:(id)arg5;
- (void)webView:(id)arg1 a:(id)arg2 b:(id)arg3 c:(id)arg4;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)privateErrorProcess:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)privateFinishNavigation:(id)arg1 Navigation:(id)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (_Bool)shortNavigationWithoutProgress:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)onHistoryAPIMayChangeMainDocumentURL:(id)arg1;
- (_Bool)isCrashedEver:(id)arg1;
- (_Bool)isCrashedEver;
- (_Bool)syncCheckWKWebViewUsingFlag;
- (void)removeNavigationNormalEndRecord:(id)arg1;
- (void)addNavigationStartRecord:(id)arg1;
- (_Bool)supportWKWebViewOrNot;
- (_Bool)isNativeListener:(id)arg1;
- (_Bool)webViewShouldStartLoadWithRequest:(id)arg1 navigationType:(long long)arg2;
@property(nonatomic) _Bool hideProgressBar;
- (void)stopLoading;
- (void)startLoading;
- (void)changeWebViewFontSize;
- (id)navigationTitle;
- (void)reload;
- (void)loadRequest:(id)arg1;
- (void)positionHeaderAndFooter;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)initWKWebViewWithConfiguration;
- (scoped_refptr_c1fa851d *)getUrlModelMsg;
- (void)setLinkModelMsg:(scoped_refptr_c1fa851d *)arg1;
- (void)dealloc;
- (id)init;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
-     // Error parsing type: v36@0:8^{Message={AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::MessageObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::MessageObserver *, std::__1::allocator<model::MessageObserver *> >=^^{MessageObserver}^^{MessageObserver}{__compressed_pair<model::MessageObserver **, std::__1::allocator<model::MessageObserver *> >=^^{MessageObserver}}}ii}{unique_ptr<pb::Message, std::__1::default_delete<pb::Message> >={__compressed_pair<pb::Message *, std::__1::default_delete<pb::Message> >=^{Message}}}}16^{Conversation=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::ConversationObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::ConversationObserver *, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}^^{ConversationObserver}{__compressed_pair<model::ConversationObserver **, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}}}ii}{unique_ptr<pb::Conversation, std::__1::default_delete<pb::Conversation> >={__compressed_pair<pb::Conversation *, std::__1::default_delete<pb::Conversation> >=^{Conversation}}}{vector<scoped_refptr<model::ConversationMember>, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}^{scoped_refptr<model::ConversationMember>}{__compressed_pair<scoped_refptr<model::ConversationMember> *, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}}}BBBBBBB{unique_ptr<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >={__compressed_pair<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > *, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >=^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >}}}{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}}24B32, name: forwardingMessage:ToConversation:isSuccess:
- (struct LinkMessage)p_createLinkMessage;
- (void)scrollActionSheet:(id)arg1 didSelecteItem:(id)arg2;
- (id)defaultWebViewUrl;
- (id)defaultWebViewTitle;
- (id)defaultWebViewDescription;
- (id)defaultWebViewIconUrl;
- (void)p_showToastWithTips:(id)arg1;
- (void)p_actionEvaluate;
- (void)p_actionReload;
- (void)p_actionChangeFont;
- (void)p_actionCopyLink;
- (void)p_actionEnterProfile;
- (void)p_actionSendMessage;
- (void)p_actionEnterConv;
- (void)p_actionCollect;
- (void)p_actionCollectWithLinkMessage:(const struct LinkMessage *)arg1;
- (_Bool)p_isNeedCreateNewLinkMessageForCollect;
- (void)p_actionCancelCollect;
- (void)p_actionSendMail;
- (void)p_actionOpenWithSafari;
- (void)forwardDidClick;
- (void)shareToWechatWithScene:(int)arg1;
- (void)shareToTimelineDidClick;
- (void)shareToWechatDidClick;
- (id)str_actionEvaluate;
- (id)str_actionReload;
- (id)str_actionChangeFont;
- (id)str_actionCopyLink;
- (id)str_actionSendMessage;
- (id)str_actionEnterConv;
- (id)str_actionEnterProfile;
- (id)str_actionCancelCollect;
- (id)str_actionCollect;
- (id)str_actionSendMail;
- (id)str_actionOpenWithSafari;
- (id)str_actionShareToTimeline;
- (id)str_actionShareToWexin;
- (id)str_actionForward;
- (_Bool)showsMenuAction:(id)arg1;
- (void)p_addActionItemTitle:(id)arg1 andIcon:(id)arg2 toRowArray:(id)arg3;
- (void)p_setupRow2:(id)arg1;
- (void)p_setupRow1:(id)arg1;
- (void)moreOperationDidClick:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

