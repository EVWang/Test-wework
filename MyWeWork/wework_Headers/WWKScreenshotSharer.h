//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "WWKForwardingControllerDelegate-Protocol.h"
#import "WWKPreviewControllerDelegate-Protocol.h"
#import "WWKScreenshotShareViewDelegate-Protocol.h"

@class NSString, NSTimer, UITapGestureRecognizer, WWKAlertController, WWKPreviewController, WWKScreenshotShareView;

@interface WWKScreenshotSharer : NSObject <UIGestureRecognizerDelegate, WWKScreenshotShareViewDelegate, WWKPreviewControllerDelegate, WWKForwardingControllerDelegate>
{
    WWKScreenshotShareView *_shareView;
    UITapGestureRecognizer *_tapGestureRecognizer;
    WWKAlertController *_alertController;
    NSTimer *_stopShareTimer;
    NSTimer *_getRecentAssetTimer;
    double _keyboardHeight;
    long long _retryCount;
    WWKPreviewController *_previewController;
}

@property(retain, nonatomic) WWKPreviewController *previewController; // @synthesize previewController=_previewController;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) double keyboardHeight; // @synthesize keyboardHeight=_keyboardHeight;
@property(retain, nonatomic) NSTimer *getRecentAssetTimer; // @synthesize getRecentAssetTimer=_getRecentAssetTimer;
@property(retain, nonatomic) NSTimer *stopShareTimer; // @synthesize stopShareTimer=_stopShareTimer;
@property(retain, nonatomic) WWKAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(retain, nonatomic) WWKScreenshotShareView *shareView; // @synthesize shareView=_shareView;
- (void).cxx_destruct;
-     // Error parsing type: v36@0:8^{Message={AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::MessageObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::MessageObserver *, std::__1::allocator<model::MessageObserver *> >=^^{MessageObserver}^^{MessageObserver}{__compressed_pair<model::MessageObserver **, std::__1::allocator<model::MessageObserver *> >=^^{MessageObserver}}}ii}{unique_ptr<pb::Message, std::__1::default_delete<pb::Message> >={__compressed_pair<pb::Message *, std::__1::default_delete<pb::Message> >=^{Message}}}}16^{Conversation=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::ConversationObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::ConversationObserver *, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}^^{ConversationObserver}{__compressed_pair<model::ConversationObserver **, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}}}ii}{unique_ptr<pb::Conversation, std::__1::default_delete<pb::Conversation> >={__compressed_pair<pb::Conversation *, std::__1::default_delete<pb::Conversation> >=^{Conversation}}}{vector<scoped_refptr<model::ConversationMember>, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}^{scoped_refptr<model::ConversationMember>}{__compressed_pair<scoped_refptr<model::ConversationMember> *, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}}}BBBBBBB{unique_ptr<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >={__compressed_pair<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > *, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >=^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >}}}{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}}24B32, name: forwardingMessage:ToConversation:isSuccess:
- (void)photoBrowserDidCanceled:(id)arg1;
- (void)photoBrowser:(id)arg1 sendImg:(id)arg2;
- (void)photoBrowser:(id)arg1 didFinishPickingPhotosWithInfo:(id)arg2 isNeedOrginalSize:(_Bool)arg3;
- (void)screenshotShareViewDidClick:(id)arg1;
- (void)screenshotShareViewDidDisapear:(id)arg1;
- (void)tapWindow:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)keyboardWasHide:(id)arg1;
- (void)keyboardWasShown:(id)arg1;
- (scoped_refptr_c1fa851d)buildImageMessage:(id)arg1 isHD:(_Bool)arg2 width:(double)arg3 height:(double)arg4;
- (double)p_sendImageJPEGQuality;
- (id)saveImageToFile:(id)arg1 isHD:(_Bool)arg2;
- (void)showShareMenu:(id)arg1 isHD:(_Bool)arg2;
- (void)reset;
- (void)retryGetRecentAsset:(id)arg1;
- (void)stopShare:(id)arg1;
- (void)showShareView:(id)arg1;
- (id)topViewControllerWithRootViewController:(id)arg1;
- (id)topViewController;
- (void)beginShare;
- (void)getRecentPhotoAsset:(CDUnknownBlockType)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

