//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIScrollView.h>

@class UIImageView, UILabel, WWKAvatarImageView, WWKIncribeBottomView;

@interface WWKNewWSShareView : UIScrollView
{
    struct HolidayInfo _workStatus;
    scoped_refptr_e1f85e48 _user;
    UILabel *_titleLabel;
    WWKAvatarImageView *_avatarView;
    UILabel *_statusLabel;
    UIImageView *_statusImg;
    UIImageView *_statusBackImg;
    WWKIncribeBottomView *_incribeView;
    long long _incribeType;
}

@property(nonatomic) long long incribeType; // @synthesize incribeType=_incribeType;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)layoutSubViewsWithWidth:(double)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)timeStringTwo:(id)arg1;
- (id)timeHourStr:(id)arg1;
- (id)timeStringOne:(id)arg1;
- (void)fixViewsFontPlus:(long long)arg1;
- (void)configIncribeView:(long long)arg1;
-     // Error parsing type: v32@0:8r^{HolidayInfo=^^?{UnknownFieldSet=^{vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> >}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}IIQIII}16^{User=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{ObserverList<model::UserObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::UserObserver *, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}^^{UserObserver}{__compressed_pair<model::UserObserver **, std::__1::allocator<model::UserObserver *> >=^^{UserObserver}}}ii}{unique_ptr<pb::User, std::__1::default_delete<pb::User> >={__compressed_pair<pb::User *, std::__1::default_delete<pb::User> >=^{User}}}{scoped_refptr<model::Company>=^{Company}}}24, name: setWorkStatus:andUser:
- (void)initSubViews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

