//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface WWKLogicHelper : NSObject
{
}

+ (_Bool)isApnsNotificationOn;
+ (_Bool)isMulitPCLoginEnabled;
+ (void)pushToFeedbackConvFromNavigation:(id)arg1 hideBottomBar:(_Bool)arg2 source:(unsigned int)arg3 okHandle:(CDUnknownBlockType)arg4 errorHandle:(CDUnknownBlockType)arg5;
+ (void)pushToFeedbackConvFromNavigation:(id)arg1 hideBottomBar:(_Bool)arg2 source:(unsigned int)arg3;
+ (unsigned long long)fileSizeAtPath:(id)arg1;
+ (void)forwardAlert:(id)arg1 corpName:(id)arg2 toConveration:(scoped_refptr_fd92d7bf)arg3 orUserList:(vector_89e6321f)arg4 convTitle:(id)arg5 successCallback:(CDUnknownBlockType)arg6;
+ (void)forwardAlert:(id)arg1 toConveration:(scoped_refptr_fd92d7bf)arg2 orUserList:(vector_89e6321f)arg3 convTitle:(id)arg4 successCallback:(CDUnknownBlockType)arg5;
+ (_Bool)sysDisableEdit:(unsigned int)arg1;
+ (void)reportClientServiceActionClicked:(scoped_refptr_fd92d7bf)arg1 msg:(scoped_refptr_c1fa851d)arg2 action:(basic_string_a490aa4c)arg3;
+ (id)getSpecialEventUrl:(unsigned long long)arg1;
+ (id)getSpecialEventTitile:(unsigned long long)arg1;
+ (_Bool)isSpecialEventVid:(unsigned long long)arg1;
+ (void)reportEnterClientServiceConversation:(scoped_refptr_fd92d7bf)arg1;
+ (void)reportEnterAppWithType:(int)arg1 andBusinessId:(unsigned long long)arg2;
+ (id)snapshotImageWithUser:(scoped_refptr_e1f85e48)arg1;
+ (_Bool)isStrongBindCorp;
+ (_Bool)checkStrongBindCorpToModifyArch;
+ (_Bool)strongBindCorpAlertController;
+ (_Bool)checkModifyMemberAbility;
+ (_Bool)isCorpCreatedByMobileAndNotAuthLicense;
+ (void)pushToUserInfoController:(const scoped_refptr_e1f85e48 *)arg1 navigationController:(id)arg2 hideBottomBar:(_Bool)arg3 conversation:(scoped_refptr_fd92d7bf)arg4 fromChannel:(long long)arg5 checkInSameCircle:(_Bool)arg6;
+ (void)pushToUserInfoController:(const scoped_refptr_e1f85e48 *)arg1 navigationController:(id)arg2 hideBottomBar:(_Bool)arg3 fromChannel:(long long)arg4 checkInSameCircle:(_Bool)arg5;
+ (void)pushToUserInfoController:(const scoped_refptr_e1f85e48 *)arg1 navigationController:(id)arg2 hideBottomBar:(_Bool)arg3 checkInSameCircle:(_Bool)arg4;
+     // Error parsing type: B24@0:8r^{Conversation=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{ObserverList<model::ConversationObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<model::ConversationObserver *, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}^^{ConversationObserver}{__compressed_pair<model::ConversationObserver **, std::__1::allocator<model::ConversationObserver *> >=^^{ConversationObserver}}}ii}{unique_ptr<pb::Conversation, std::__1::default_delete<pb::Conversation> >={__compressed_pair<pb::Conversation *, std::__1::default_delete<pb::Conversation> >=^{Conversation}}}{vector<scoped_refptr<model::ConversationMember>, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}^{scoped_refptr<model::ConversationMember>}{__compressed_pair<scoped_refptr<model::ConversationMember> *, std::__1::allocator<scoped_refptr<model::ConversationMember> > >=^{scoped_refptr<model::ConversationMember>}}}BBBBBBB{unique_ptr<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >={__compressed_pair<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > *, std::__1::default_delete<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > > >=^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >}}}{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}}16, name: isConversationForceReceiptEnabled:
+ (_Bool)isForceReceiptEnabled;
+ (_Bool)isContinousReceiptEnabled;
+ (_Bool)isHitMailBlackList:(const basic_string_a490aa4c *)arg1;
+ (_Bool)isMailBind;
+ (_Bool)compareUserInfoAlias:(const basic_string_a490aa4c *)arg1 withMailProfileEmail:(const basic_string_a490aa4c *)arg2;
+ (_Bool)compareUserName:(const scoped_refptr_e1f85e48 *)arg1 withOther:(const scoped_refptr_e1f85e48 *)arg2;
+ (_Bool)isDefaultApplicationOpen:(unsigned long long)arg1;
+ (struct PhoneItem)createPhotoItemWithInternationCode:(const basic_string_a490aa4c *)arg1 number:(const basic_string_a490aa4c *)arg2;
+ (void)transformFromAttach:(const struct MailAttachment *)arg1 toMessage:(scoped_refptr_c1fa851d)arg2;
+ (void)setGlobalShieldWithRemainSeconds:(int)arg1;
+ (_Bool)isAnyOneHasEmailInConversation:(scoped_refptr_fd92d7bf)arg1;
+ (_Bool)isAnyOneHasMobileNumberInConversation:(scoped_refptr_fd92d7bf)arg1;
+ (_Bool)isCorpSubManager;
+ (_Bool)isCorpSuperManager;
+ (_Bool)isAvailabelWithUser:(scoped_refptr_e1f85e48)arg1 withoutCorpCircle:(_Bool)arg2;
+ (_Bool)isAvailabelWithUser:(scoped_refptr_e1f85e48)arg1;
+ (_Bool)isTencentStaff;
+ (id)loginUserName;
+ (struct CorpBriefInfo)currentCorpBriefInfo;
+ (vector_89e6321f)sortedUserList:(vector_89e6321f)arg1;
+ (vector_4ea3d2e4)sortedMemberList:(vector_4ea3d2e4)arg1;
+ (struct GlobalBreak)currentGlobalBreak;
+ (int)currentLanguageMode;
+ (double)adjustFontSizeFitsLanguageType:(double)arg1;
+ (double)titleFontSizeFitsLanguageType;

@end

