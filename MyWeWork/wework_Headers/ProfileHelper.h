//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface ProfileHelper : NSObject
{
}

+     // Error parsing type: ^{ProxySocks5Policy=^^?{AtomicRefCount={atomic<int>=Ai}}{WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{NetworkProxyInfo={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}i}Bi{NotificationRegistrar={vector<content::NotificationRegistrar::Record, std::__1::allocator<content::NotificationRegistrar::Record> >=^{Record}^{Record}{__compressed_pair<content::NotificationRegistrar::Record *, std::__1::allocator<content::NotificationRegistrar::Record> >=^{Record}}}}{vector<allconfig::NetAddrPair, std::__1::allocator<allconfig::NetAddrPair> >=^{NetAddrPair}^{NetAddrPair}{__compressed_pair<allconfig::NetAddrPair *, std::__1::allocator<allconfig::NetAddrPair> >=^{NetAddrPair}}}B}16@0:8, name: currCorpSocks5Policy
+ (_Bool)isFourTabEnable;
+ (struct CorpBriefInfo)currentCorpInfo;
+ (_Bool)isLogin;
+ (struct Profile *)loginProfile;
+ (_Bool)isDefaultAppClosed:(int)arg1;
+ (struct GrandProfile *)grandProfile;
+ (struct Profile *)currentProfile;

@end

